# Generated by Django 4.2 on 2025-03-03 05:04

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=50)),
                ('capacity', models.IntegerField(choices=[(29, '29'), (50, '50'), (70, '70')])),
                ('available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('client_type', models.CharField(choices=[('personne_physique', 'حريف عادي'), ('conventionne', 'حريف متعاقد'), ('sakhir', 'سخير من سلطة'), ('pdg_permission', 'إذن المدير العام'), ('sport_supported', 'حريف مدعوم من مندوبية الرياضة')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Distance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination', models.CharField(max_length=100)),
                ('distance_km', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('matricule', models.CharField(max_length=50)),
                ('available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure', models.CharField(default='قفصة', max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('days', models.IntegerField(editable=False)),
                ('unit_price', models.FloatField(default=3.0)),
                ('daily_price', models.FloatField(default=250.0)),
                ('discount', models.FloatField(default=0.0)),
                ('tax_rate', models.FloatField(default=0.07)),
                ('stamp_duty', models.FloatField(default=1.0)),
                ('total_price', models.FloatField(editable=False)),
                ('client_share', models.FloatField(default=0.0, editable=False)),
                ('ministry_share', models.FloatField(default=0.0, editable=False)),
                ('status', models.CharField(choices=[('pending', 'في الانتظار'), ('confirmed_exploitant', 'تم التأكيد من المشغل'), ('pending_pdg', 'في انتظار تأكيد المدير العام'), ('confirmed', 'مؤكدة')], default='pending', max_length=20)),
                ('reference', models.CharField(blank=True, max_length=50, unique=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.client')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.distance')),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bus')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.driver')),
                ('reservation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Superviseur', 'Superviseur'), ('Exploitant', 'Exploitant'), ('Caissier', 'Caissier'), ('PDG', 'PDG')], default='Superviseur', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
